{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,YAAY,MAAM,gBAAgB,CAAC;AAE1C,+BAA+B;AAC/B,MAAM,CAAC,SAAS,CAAC,WAAW,KAAK;IAC/B,GAAG,CAAC,OAAO;QACT,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;IACrC,CAAC;IACD,KAAK,CAAC,MAAM,CAAC,OAAO;QAClB,IAAI,CAAC,OAAO,EAAE,SAAS;YAAE,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;QAC/D,MAAM,EAAE,gBAAgB,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC;QAC/C,MAAM,MAAM,GAAG,MAAM,YAAY,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;QAC3D,IAAI,MAAM;YAAE,OAAO,MAAM,CAAC;QAC1B,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;IAC3C,CAAC;CACsB,CAAC","sourcesContent":["import ExpoWebauthn from \"./ExpoWebauthn\";\n\n// @ts-expect-error -- polyfill\nglobal.navigator.credentials ??= {\n  get(options) {\n    throw new Error(\"not implemented\");\n  },\n  async create(options) {\n    if (!options?.publicKey) throw new Error(\"publicKey required\");\n    const { pubKeyCredParams } = options.publicKey;\n    const result = await ExpoWebauthn.create(pubKeyCredParams);\n    if (result) return result;\n    throw new Error(\"no credential created\");\n  },\n} as CredentialsContainer;\n"]}